@use 'variables' as *;
.ReactTable * {
  box-sizing: inherit;
}

.ReactTable {
  th,
  td {
    text-align: left;
    vertical-align: top;
    border: 0;
    padding: 4px 8px 4px 4px;
    line-height: 1.4;
    &.flag-cell {
      max-width: 36px !important;
      text-align: center;
      color: $color-red;
      border-right: 0;
      & + td {
        border-left: 0;
      }
    }
  }

  th {
    white-space: nowrap;
    &:empty,
    &:has(.flag__span:empty) {
      border: 0;
      width: 0;
      flex: 0 !important;
      max-width: 40px !important;
      & + th {
        border-left: 0;
      }
    }
    &:focus {
      border: 1px dotted gray;
    }

    &.-cursor-pointer {
      span {
        background-image: url("../../icons/icon-sort.png");
        background-repeat: no-repeat;
        background-size: 8px;
        background-position: 96% 50%;
      }

      &.-sort-asc,
      &.-sort-desc {
        box-shadow: none;
      }

      &.-sort-asc span {
        background-image: url("../../icons/icon-sort-up.png");
      }

      &.-sort-desc span {
        background-image: url("../../icons/icon-sort-down.png");
      }
    }

    .col-header {
      display: inline-block;
      margin-left: 4px;
      margin-right: 4px;
      border-bottom: 3px solid $color-blue;
      padding: 0 16px 2px 0;
      font-weight: 600;
    }

    .col-header-title {
      margin: 0;
      border-bottom: 1px solid $color-gray-lighter;
    }
  }

  td {
    &:empty:first-of-type {
      border-right: 0;
      border-left: 0;
      border-bottom: 0;
      flex: 0 !important;
    }
  }
  + .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 16px;
    margin-top: 16px;
    border-top: 1px solid $color-blue-lighter;
    input,
    select {
      border-radius: 0;
      font-weight: 600;
      color: $link-color;
    }
    input {
      height: 40px;
      border: 1px solid $color-gray-lighter;
    }
    select {
      height: 40px;
      border: 1px solid $color-gray-lighter;
    }
    .-pageJump {
      input {
        border-radius: 0;
        color: $link-color;
        padding: 4px 6px;
      }
    }
    .buttons-container {
      box-shadow: none;
      // border-top: 1px solid $color-gray-lightest;
      // border-bottom: 1px solid $color-gray-lightest;
      border: 0;
      padding: 4px 0 4px;
      gap: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      button, .-previous, .-next, .-center {
        flex: 1;
        justify-content: center;
        flex-basis: fit-content;
        position: relative;
        width: 100%;
      }
      .-next,
      .-previous {
        button:before {
          display: inline-block;
          font-style: normal;
          font-variant: normal;
          text-rendering: auto;
          -webkit-font-smoothing: antialiased;
          position: absolute;
          font-weight: 900;
          color: $link-color;
        }
      }
      .-next {
        button {
          padding: 4px 20px 4px 12px;
          &:before {
            content: "\276F";
            top: 11px;
            right: 38px;
          }
        }
      }
      .-previous {
        button {
          padding: 4px 12px 4px 24px;
          &:before {
            content: "\2039";
            left: 24px;
            font-size: 26px;
            top: 3px;
          }
        }
      }
      .-next:not(:has([disabled])),
      .-previous:not(:has([disabled])) {
        button:hover {
          &:before {
            color: #FFF;
          }
        }
      }

      button {
        width: 100%;
        width: 104px;
        margin: 4px auto;
        height: 32px;
        font-weight: 600;
        border-radius: 24px;
        color: $link-color !important;
        border-radius: 100vmax;
        border: 1px solid $link-border-color;
        padding: 4px 24px;
        background-color: #FFF !important;
        position: relative;
        &:not([disabled]):hover {
          background-color: $link-color !important;
          color: #FFF !important;
        }
      }

      .-btn {
        background: $color-blue;
        color: #fff;
        &:hover {
          background: $color-blue-darker;
        }
        &[disabled]:hover {
          background: $color-blue;
        }
      }
    }
  }
}
.ReactTable.single-column {
  td {
    max-width: 100%;
  }
}

.table {
  overflow: auto;
  .ReactTable {
    th, td {
      max-width: 140px;
    }
    &.single-column {
      td, th {
        max-width: 100%;
      }
    }
  }
  &table, table {
    border-collapse: separate;
    border-spacing: 0;
    &.ReactTable {
      table-layout:fixed;
      width:100%;
    }
  }
  th {
    border-bottom: 1px solid $table-cell-border-color;
    &.bordered {
      border-left: 1px solid $table-cell-border-color;
      border-right: 1px solid $table-cell-border-color;
      border-top: 1px solid $table-cell-border-color;
    }
    background-color: #fff;
    &.dark-border {
      border-color: $table-cell-border-dark-color;
    }
    &.accent {
      border-bottom: 2px solid $table-cell-border-accent-color;
    }
    &.fat {
      padding: 8px 16px !important;
    }
  }
  td {
    border-left: 1px solid $table-cell-border-color;
    &.bordered {
      border-left: 1px solid $table-cell-border-color;
      border-right: 1px solid $table-cell-border-color;
      border-bottom: 1px solid $table-cell-border-color;
    }
    padding: 4px;
    background-color: #fff;
    &.dark-border {
      border-color: $table-cell-border-dark-color;
    }
    &.fat {
      padding: 8px 16px !important;
    }
    &.nowrap {
      white-space: nowrap;
    }
  }
  tr {
    td {
      &.row-header {
        background-color: $color-gray-lightest !important;
        font-weight: 900;
        border-bottom: 1px solid $color-blue-darker !important;
        &:first-of-type {
          text-wrap: nowrap;
        }
        &:not(:last-of-type) {
          border-right: 0 #fff !important;
        }
        &:not(:first-of-type) {
          border-left: 0 #fff !important;
        }
      }
    }
    &:not(:first-of-type) {
      td.row-header {
        border-top: 1px solid $color-blue-darker !important;
      }
    }
  }
  &.slider-table {
    td,
    th {
      transition: transform 550ms cubic-bezier(0.25, 0.75, 0.5, 1.25);
      overflow: hidden;
      //width: 0;
      &.a-active {
        transform: translateX(0);
        //width: auto;
      }
      &.a-inactive {
        transform: translateX(-2000px);
      }
    }
  }
}
.ReactTable.wide {
  th, td {
    max-width: 100%;
  }
}

.two-columns {
  .table {
    table-layout: auto !important;
    th:first-of-type,
    td:first-of-type {
      width: 70%;
    }
  }
}
